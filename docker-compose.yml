# ------------------------------------------------
# Projet:   TP01
# Cours:    420-4D4
# Fichier:  docker-compose.yml - version de départ
# Auteur:   Olivier Nadeau
# Date:     22/03/2023
# ------------------------------------------------
# Description: Il faut démarrer, avec 'docker-compose -d --build', une application multi-services qui propose:
#   Deux réseaux, un site Web principal, deux systèmes de gestion de bases de données (SGBD)
#   mariaDB et postgreSQL, phpMyAdmin, Wordpress (avec un thème et un plugin personnalisés),
#   postgresAdmin, percona PMM et un client percona PMM pour postgres.
# ------------------------------------------------
# M-A-J:
version: "3"
services:
  # ===========================================
  # Le serveur de bases de données mariaDB
  # # Service disponible sur le port 3307
  # ===========================================
  mariadb:
    image: mariadb
    container_name: mariadb
    ports:
      - 3307:3306
    restart: always
    networks:
      - reseauWP
    volumes:
      - ./bdwp:/var/lib/mysql
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}

  # <-------------------------------------- FIN

  # ==============================================
  # Construction et démarrage du serveur Web,
  # à partir des fichiers du dossier 'contenu-web'
  # # Service disponible sur le port 80
  # ==============================================
  nginx:
    image: nginx-perso
    container_name: nginx
    networks:
      - reseauWP
    ports:
      - 80:80

  # <-------------------------------------- FIN



  # ===========================================
  # Construction et démarrage de WordPress
  # Service disponible sur le port 88
  # ===========================================
  # Exemple d'utilisation des variables du fichier .env
  #    environment:
  #      - WORDPRESS_DB_HOST=${WP_HOST}
  #      - WORDPRESS_DB_USER=${WP_USER}
  #      - WORDPRESS_DB_PASSWORD=${WP_PASSWORD}
  #      - WORDPRESS_DB_NAME=${WP_DB_NAME}
  wordpress:
    image: wordpress-perso
    container_name: wordpress
    restart: always
    networks:
      - reseauWP
    ports:
      - 88:80
    depends_on:
      - mariadb
    environment:
      - WORDPRESS_DB_HOST=${WP_HOST}
      - WORDPRESS_DB_USER=${WP_USER}
      - WORDPRESS_DB_PASSWORD=${WP_PASSWORD}
      - WORDPRESS_DB_NAME=${WP_DB_NAME}
      - WORDPRESS_TABLE_PREFIX=${WP_TABLE_PREFIX}

  # <-------------------------------------- FIN



  # ---- ZONE postgres + PMM
  # ===========================================
  # Le serveur d'activités percona PMM
  # Service disponible sur le port 83
  # ===========================================
  percona-ppm:
    image: percona/pmm-server
    container_name: percona-ppm
    restart: always
    networks:
      - reseauPMM
    ports:
      - 83:80
    environment:
      - SERVER_USER=${PMM_USER}
      - SERVER_PASSWORD=${PMM_PASS}
    volumes_from:
      - pmm-data
        # <-------------------------------------- FIN

        # ===========================================
        # Le serveur de base de données postgres
        # Service disponible sur le port 5432
        # ===========================================
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    networks:
      - reseauPMM
    ports:
      - 5432:80
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  # <-------------------------------------- FIN



  # ===========================================
  # Démarrage de postgresAdmin
  # Service disponible sur le port 81
  # ===========================================


  # <-------------------------------------- FIN



  # ================================================
  # Le client PMM pour la base de données postgress
  # ================================================
  pmm-client-postgres:
    image: "perconalab/pmm-client:dev-latest"
    container_name: pmm-client-postgres # Voici les variables nécessaires au fonctionnement du client PMM
    #      - PMM_SERVER=pmm-server:443
    #      - PMM_USER=
    #      - PMM_PASSWORD=
    #      - DB_TYPE=postgresql
    #      - DB_HOST=
    #      - DB_PORT=
    #      - DB_USER=${POSTGRES_USER}
    #      - DB_PASSWORD=${POSTGRES_PASSWORD}


    # <-------------------------------------- FIN



    # ===========================================
    # Démarrage de phpMyAdmin
    # Service disponible sur le port 82
    # ===========================================
    # NOTE: Il ne faut pas utiliser la méthode: PMA_ARBITRARY=1
  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: always
    networks:
      - reseauWP
    ports:
      - 82:80
    depends_on:
      - mariadb
      # <-------------------------------------- FIN


      # ===========================================
      # Les réseaux de l'application
      # ===========================================
networks:
  reseauWP:
    name: reseauWP
    driver: bridge

  reseauPMM:
    name: reseauPMM
    driver: bridge
    # <-------------------------------------- FIN
